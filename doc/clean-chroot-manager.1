.\" Text automatically generated by txt2man
.TH clean-chroot-manager 1 "04 May 2014" "" ""
.SH NAME
\fBclean-chroot-manager (ccm64 and ccm32) \fP- Wrapper scripts to manage clean chroots for building packages under Arch Linux.
\fB
.SH DESCRIPTION
Ccm provides a "one-click" solution for building packages in a clean chroot. A key point that differentiates ccm from the arch-build-scripts is that ccm automatically manages a local repo within the chroot so dependencies that you build are pulled transparently from that local repo. This is helpful if building a package that has a dependency that also has to be built (i.e. one that is not available from the Arch repos).
.PP
An illustrative example, let's say that we want to build "bar" from the AUR. "Bar" has a build dependency of "foo" which is also in the AUR. Rather than first building "foo", then installing "foo", then building "bar", and finally removing "foo", the local repo will save a copy of foo.pkg.tar.xz which is indexed automatically therein. Pacman within the chroot is aware of the "foo" package thanks to the local repo. So, when the user tries to build "bar", pacman will silently grabs foo.pkg.tar.xz from the local repo as any other dependency.
.SH SYNOPSIS
.nf
.fam C
\fBsudo\fP \fIccm64\fP [\fIoption\fP]
\fBsudo\fP \fIccm32\fP [\fIoption\fP]

\fBNote\fP \fIthat\fP \fIccm64\fP \fIwill\fP \fIbuild\fP \fIpackages\fP \fIin\fP \fIa\fP \fI64-bit\fP \fIchroot\fP \fIwhile\fP \fIccm32\fP \fIwill\fP \fIbuild\fP \fIpackages\fP \fIin\fP \fIa\fP \fI32-bit\fP \fIchroot\fP. \fIIf\fP \fIinvoked\fP \fIwithout\fP \fIa\fP \fInumerical\fP suffix, \fIa\fP \fIsymlink\fP \fIinvokes\fP \fIccm64\fP \fIif\fP \fIusers\fP \fIsimply\fP \fIcall\fP ccm.

.fam T
.fi
.fam T
.fi
.SH OPTIONS
.TP
.B
c
Create \fIa\fP clean \fIchroot\fP.
.TP
.B
t
Toggle [testing] and [community-testing] on/off \fIin\fP the \fIchroot\fP. This function \fIwill\fP enable or disable the testing repos \fIin\fP the \fIchroot\fP and also take care of upgrading/downgrading any affected \fIpackages\fP.
.TP
.B
m
Toggle [multilib] on/off \fIin\fP the \fIchroot\fP. This function \fIwill\fP enable or disable the multilib repo \fIin\fP the \fIchroot\fP and also take care of upgrading/downgrading any affected \fIpackages\fP.
.TP
.B
s
Run makepkg \fIin\fP \fIbuild\fP mode under the \fIchroot\fP. The equivalent of `makepkg \fB-src\fP` \fIin\fP the \fIchroot\fP.
.TP
.B
l
List the contents of the local repo (i.e. the \fIpackages\fP built to date).
.TP
.B
n
Nuke the clean \fIchroot\fP (delete it and everything under it).
.TP
.B
p
Preview settings. Show some bits about the \fIchroot\fP itself.
.TP
.B
u
Update the \fIpackages\fP inside the \fIchroot\fP. The equivalent of `pacman \fB-Syu\fP` \fIin\fP the \fIchroot\fP.
.SH QUICK SETUP
.IP 1. 4
Make sure the user has \fBsudo\fP rights to execute /usr/bin/clean-\fIchroot\fP-manager or /usr/bin/ccm.
.IP 2. 4
Run the script to create $HOME/.config/clean-\fIchroot\fP-manager.conf wherein some options and settings are stored.
.IP 3. 4
Edit this file which is commented and self-explanatory.
.SH USAGE EXAMPLES
Create \fIa\fP clean \fI64-bit\fP \fIchroot\fP under the path defined \fIin\fP the aforementioned config file:
.PP
.nf
.fam C
 $ sudo ccm64 c

.fam T
.fi
Ceate \fIa\fP clean \fI32-bit\fP \fIchroot\fP under the path defined \fIin\fP the aforementioned config file:
.PP
.nf
.fam C
 $ sudo ccm32 c

.fam T
.fi
Attempt to \fIbuild\fP the package \fIin\fP the clean \fI64-bit\fP \fIchroot\fP. \fIIf\fP successful, the package \fIwill\fP be added to \fIa\fP local pacman repo inside the \fIchroot\fP so \fIthat\fP it \fIwill\fP be available for use as \fIa\fP dependency for building other \fIpackages\fP:
.PP
.nf
.fam C
 $ cd /path/to/PKGBUILD
 $ sudo ccm64 s

.fam T
.fi
List out the contents of the \fI64-bit\fP \fIchroot\fP's local repo assuming something has been built. Useful to see what is present:
.PP
.nf
.fam C
 $ sudo ccm64 l

.fam T
.fi
Deletes everything under the top level of the \fI64-bit\fP \fIchroot\fP effectively removing it from the system:
.PP
.nf
.fam C
 $ sudo ccm64 n

.fam T
.fi
.SH TIPS
.IP \(bu 3
\fIIf\fP your machine has lots of memory, consider locating the \fIchroot\fP to tmpfs to avoid disk usage/minimize access times.
.IP \(bu 3
Since ccm requires \fBsudo\fP rights, consider making an alias for invoking it as such \fIin\fP your ~/.bashrc or the link. For example: alias \fIccm64\fP='\fBsudo\fP \fIccm64\fP' and alias \fIccm32\fP='\fBsudo\fP \fIccm32\fP'
.SH BUGS
Under some conditions, running '\fBsudo\fP logname' \fIwill\fP return the following error; ccm \fIwill\fP detect this and stop. I do not know what the source of the problem is with this. Please contact me \fIif\fP you do. Error: logname: no login name.
.SH AUTHOR
graysky (graysky AT archlinux DOT us).
